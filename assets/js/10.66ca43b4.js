(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{170:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h2",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),r("h3",{attrs:{id:"栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),r("p",[t._v("栈是一个线性结构，在计算机中是一个相当常见的数据结构。\n栈的特点是只能在某一端添加或删除数据，遵循先进后出的原则。")]),t._v(" "),r("h3",{attrs:{id:"队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),r("p",[t._v("队列一个线性结构，特点是在某一端添加数据，在另一端删除数据，遵循先进先出的原则。")]),t._v(" "),r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表","aria-hidden":"true"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("p",[t._v("链表是一个线性结构，同时也是一个天然的递归结构。链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。//求斐波拉契，用数组比简单的递归性能好")]),t._v(" "),r("h3",{attrs:{id:"还有各种树和堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#还有各种树和堆","aria-hidden":"true"}},[t._v("#")]),t._v(" 还有各种树和堆")])])}],!1,null,null,null);s.options.__file="README.md";a.default=s.exports}}]);